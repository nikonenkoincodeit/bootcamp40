//Функції
//Функція - це підпрограма, незалежна частина коду, призначена для багаторазового
//виконання конкретної задачі з різними початковими значеннями. Функції дозволяють
//структурувати великі програми, зменшують повторення та ізолюють код.

//Оголошення функції  (function declaration)

//Параметри та аргументи

//Повернення значення

//Порядок виконання коду

function multiply(x, y, z) {
  console.log(`Результат множення дорівнює ${x * y * z}`);
}

console.log('Лог до виклику функції multiply');
multiply(2, 3, 5); // Результат множення дорівнює 30
console.log('Лог після виклику функції multiply');

// Послідовність логів в консолі
// "Лог до виклику функції multiply"
// "Результат множення дорівнює 30"
// "Лог після виклику функції multiply"

//Параметри за замовчуванням

//Псевдомасив arguments

//Перетворення псевдомасиву

//Патерн «Раннє повернення»

//Функціональний вираз
//Функціональний вираз (function expression) - звичайне оголошення змінної, значенням якої
//буде функція. Альтернативний спосіб оголошення функції.

//Область видимості

//Область видимості (scope) - механізм, який визначає доступність змінних у коді, що
//виконується.

//Ланцюжок областей видимості (scope chain) - області видимості утворюють ієрархію, за
//якою дочірні області мають доступ до змінних з батьківських областей, але не навпаки.

//Глобальна область видимості
//Змінні, оголошені на найвищому рівні, тобто за межами будь-яких конструкцій на зразок
//if, while, for і функцій, знаходяться в глобальній області видимості і доступні всюди
//після їх оголошення.

//Блокова область видимості
//Змінні, оголошені всередині інструкцій if, for, функцій та інших блоків коду, взятих у
//фігурні дужки {}, знаходяться в блоковій області видимості і доступні тільки всередині
//цього блоку коду або у блоках, вкладених в нього.
